==================================== MANUAL ====================================
This is the VanillaVotifier manual. Reading this is recommended if it's the
first time you're using VanillaVotifier.

--------------------------------- CONFIGURATION --------------------------------
The configuration for VanillaVotifier is automatically generated on the first
startup and located in the same folder you started the program from, with name
"config.json". Since the configuration file gets read by VanillaVotifier only on
startup, you may use the "restart" command to force the program to reload the
settings.
Here is a short description of all settings you can configure in the file.

"config-version" is simply the version of the config. If VanillaVotifier gets
updated, it can rely on this setting to see if the config is outdated. Please
don't touch this setting!

"log-file" is the location of the log file

"ip" and "port" are the IP and the port you want VanillaVotifier to run on.
Nothing special here.

"key-pair-files/public" and "key-pair-files/private" are the locations of the
public and private RSA POM files VanillaVotifier needs to work (for more
information, please read the COMMANDS section).

"rcon/ip" and "rcon/port" are the IP and the port of the RCon-enabled Minecraft
server you want VanillaVotifier to send commands to. Again, nothing special
here.

"rcon/password" is the password VanillaVotifier has to utilize to connect to
RCon.

"rcon/commands" are the Minecraft commands VanillaVotifier has to execute
through RCon when somebody votes for your server. "${service-name}",
"${user-name}", "${address}", "${time-stamp}" will be replaced with the value of
the service the user has voted on (like MCSL), his IGN, his address, and the
time stamp he has voted on (for more information, please read the COMMANDS
section).

----------------------------------- COMMANDS -----------------------------------
To start out, there are three really basic and simple commands: "stop",
"restart" and "info". There's not much to say here: "stop" stops the
VanillaVotifier server, "restart" restarts VanillaVotifier, thus updting its
config, "info" displays some information about VanillaVotifier itself (like its
version and the third party libraries used).

A more advanced command is "gen-key-pair". All votifier websites and servers
(like this one) use RSA, basically a way to send data securely between hosts. To
work, RSA needs to have two keys, a public and a private one. It's not really
important to know what this keys are or what they do, but it's important to know
that they are needed to make votifier programs work. When you first start
VanillaVotifier, the two RSA keys are generated for you, but if you want to
generate new ones, you can use the command "gen-key-pair".

Lastly, there are two debugging commands: "test-vote" and "test-query".
Basically, whenever someone votes for your server, a string of data is sent to
the votifier server. The string of data looks something like this:
VOTE---<service name>---<user name>---<address>---<time stamp>
Instead of "<service name>" there will be the name of the site the user has
voted on (like MCSL), "<user name>", "<address>" and "<time stamp>" will be
replaced with the IGN of the user who has voted, his IP address, and the time
stamp he has voted on. For example, let's pretend that Notch has voted for your
server on MCSL the day 06/07/2015 on 22:40:16, and that his IP is 111.23.8.52:
we would have to write the command
test-query VOTE---Random service---Notch---127.0.0.1---2015-07-06 22:40:16
To make things easier, a similar result can be achieved with "test-vote Notch".
================================================================================